%META:TOPICINFO{author="ProjectContributor" comment="" date="1556792547" format="1.1"  version="1"}%
---+!! <nop>%TOPIC%
%FORMFIELD{"Description"}%

%TOC%

This plugin comes as a !WikiApp to run a weblog using Foswiki. 
Based on the [[Foswiki:Extensions/WikiWorkbenchContrib][WikiWorkbench approach]], it may be used
to instantiate as many blogs as you like on the same Foswiki site.

---++ Features

   * easy to use
   * comes with a simple two step workflow to publish blog postings
   * extensible categorization and tagging system
   * automatic recommendation system for further reading (based on Foswiki:Extensions/SolrPlugin)
   * pluggable commenting system, either locally hosted using Foswiki:Extensions/MetaCommentPlugin or integrating [[http://disqus.com/][Disqus]] using the Foswiki:Extensions/DisqusPlugin
   * full content syndication: blog postings are published via rss and atom in full length
   * full-text search using Foswiki:Extensions/SolrPlugin
   * easy to use pagination among blog postings
   * optional infinite scrolling blog postings using Foswiki:Extensions/InfiniteScrollContrib
   * optional pingback integration using Foswiki:Extensions/PingBackPlugin

---++ Screenshots
%IF{"context ImageGalleryPluginEnabled"
  then="$percntIMAGEGALLERY{size=\"large\"}$percnt"
  else="$percntINCLUDE{\"%WEB%.%TOPIC%\" section=\"screenshots\"}$percnt"
}%

<verbatim class="foswikiHidden">
%STARTSECTION{"screenshots"}%<div class="screenshots">
  <a href="%ATTACHURLPATH%/BlogPluginSnap1.png"><img src="%ATTACHURLPATH%/BlogPluginSnap1.png" width="150" alt="snap1" /></a>
  <a href="%ATTACHURLPATH%/BlogPluginSnap2.png"><img src="%ATTACHURLPATH%/BlogPluginSnap2.png" width="150" alt="snap2" /></a>
  <a href="%ATTACHURLPATH%/BlogPluginSnap3.png"><img src="%ATTACHURLPATH%/BlogPluginSnap3.png" width="150" alt="snap3" /></a>
  %CLEAR%
  <a href="%ATTACHURLPATH%/BlogPluginSnap4.png"><img src="%ATTACHURLPATH%/BlogPluginSnap4.png" width="150" alt="snap4" /></a>
  <a href="%ATTACHURLPATH%/BlogPluginSnap5.png"><img src="%ATTACHURLPATH%/BlogPluginSnap5.png" width="150" alt="snap5" /></a>
  <a href="%ATTACHURLPATH%/BlogPluginSnap6.png"><img src="%ATTACHURLPATH%/BlogPluginSnap6.png" width="150" alt="snap6" /></a>
  %CLEAR%
</div>

<literal>
<style>
.screenshots a {
  float:left;
  margin:0 2px 2px;
  overflow:hidden;
  max-height:150px;
}
</style>
</literal>
%ENDSECTION{"screenshots"}%
</verbatim>

---++ Getting started

To create a new blog use the [[%SYSTEMWEB%.WebCreateNewWeb]] tool and select the =_BlogTemplate= template.
This will create a new web by copying the content of the [[_BlogTemplate.WebHome][_BlogTemplate web]] into the new target web.

Now check the !WebPreferences of this newly created web and review its settings, i.e. the access rights for
the web. 

Make sure you add a nice description of your blog in the =WEBSUMMARY= preference setting.

Create a new posting by clicking on *BlogEntries* on the sidebar. This will list all existing blog entries,
as well as a form to create a new one.

Note that your posting will not be publicly visible unless you switched its *State* property to *published*.  

---++ Importing <nop>WordPress Content

%TOPIC% comes with a conversion tool to convert a WXR, the native way of <nop>WordPress to export its data to an XML file, into
Foswiki content. This content will then make up a new web that you can run using this plugin. I.e. it will extract all tags and
categories as well as comments.

The basic command to do so is:

<verbatim>
cd <foswiki-dir>/bin
./rest /BlogPlugin/importWordPress ... param=value ... 
</verbatim>

The =importWordPress= REST handler takes a couple of parameters, most imporantly the name of the XML file holding the blog data.
It can either convert all of the data or just one blog posting given its ID.

| *Parameter* | *Description* |
| =file= | path to the WXR file |
| =id= | ID of a single blog posting to convert; by default _all_ postings are converted |
| =target= | name of a web to be created |
| =override= | boolean flag weather to override the target web if it already exists |
| =template= | template web to be used, defaults to =_BlogTemplate= |
| =dry= | boolean flag to switch on/off real operations; you might want to test conversion first by enabling this flag |

During conversion of postings a list of "downloadables" is collected and then fetched dynamically from the current <nop>WordPress site.
This is foremost any images being used in postings.

There are a couple of features that are currently _not_ converted to its Foswiki equivalent:

   * embedded videos: please have a look at Foswiki:Extensions/OEmbedPlugin how to do so easily afterwards
   * image galleries: have a look at Foswiki:Extensions/ImageGalleryPlugin

These <nop>WordPress macros will stay as they are in the text of a posting and will have to be fixed manually by now.

URLs of blog postings are created based on their title: spaces are removed and remaining words are concatenated forming a proper <nop>WikiWord.
Any converted topic will contain the original URL of its <nop>WordPress as a comment at the end of the text. In case you'd like to replace
the previous <nop>WordPress blog with Foswiki you may use the =createRedirectMap= to create a map of URLs used by the web server underneath
to redirect old <np>WordPress URLs to new Foswiki URLs.

---++ Bulk-redirects from <nop>WordPress to Foswiki URLs

<verbatim>
cd <foswiki-dir>/bin
./rest /BlogPlugin/createRedirectMap ... param=value ...
</verbatim>

Parameters resemble those of the =importWordPress= REST handler as it operates on the same WXR file.

| *Parameter* | *Description* |
| =file= | path to the WXR file |
| =id= | ID of a single blog posting to create a redirect for |
| =target= | name of the web holding the new Foswiki blog |
| =path= | (optional) view path to blog postings, defaults to =$Foswiki::cfg{ScriptUrlPaths}{view}= |
| =format= | specify the output format, can be =nginx= or =apache= (default)

Note for now the format of the resulting redirect map is only valid for Nginx out of the box. The output will look like this:

For apache (default):

<verbatim>
RewriteRule /foswiki-patch-release-1-1-10/ /bin/view/Blog/FoswikiPatchRelease1110 [R=301,L]
RewriteRule /translations-needed-for-foswiki-2-1/ /bin/view/Blog/TranslationsNeededForFoswiki21 [R=301,L]
RewriteRule /foswiki-2-1-beta-available-for-testing/ /bin/view/Blog/Foswiki21BetaIsAvailableForTesting [R=301,L]
RewriteRule /foswiki-2-1-released/ /bin/view/Blog/Foswiki21HasBeenReleased [R=301,L]
RewriteRule /foswiki-2-1-2-available/ /bin/view/Blog/Foswiki212Available [R=301,L]
</verbatim>

Store the result in  =/etc/apache2/conf-enabled/foswiki-blog-redirects.conf= or the like to make sure it is included by apache.

For nginx:

<verbatim>
~*/foswiki-patch-release-1-1-10/? /bin/view/Blog/FoswikiPatchRelease1110;
~*/translations-needed-for-foswiki-2-1/? /bin/view/Blog/TranslationsNeededForFoswiki21;
~*/foswiki-2-1-beta-available-for-testing/? /bin/view/Blog/Foswiki21BetaIsAvailableForTesting;
~*/foswiki-2-1-released/? /bin/view/Blog/Foswiki21HasBeenReleased;
~*/foswiki-2-1-2-available/? /bin/view/Blog/Foswiki212Available;
</verbatim>

Store the result in =/etc/nginx/foswiki.map= and add a rule such as 

<verbatim>
map $uri $redirect_uri {
   include /etc/nginx/foswiki.map;
}
</verbatim>

to your nginx global site settings.

---++ Automatic publishing / unpublishing blog postings

Each posting has got three valus that specify whether it is visible to the outside (published) or not (unpublished). Unpublished blog postings will have according access control rules set automatically 
to hide them from public access. 

| *Field* | *Description* |
| State | possible values are =published=, =unpublished=: only blog entries in state published are readable by other users; unpublished blog entries are only visible for the authors of this blog entry |
| Publish Date | only blog entries in state published are readable by other users; unpublished blog entries are only visible for the authors of this blog entry |
| Unpublish Date | only blog entries in state published are readable by other users; unpublished blog entries are only visible for the authors of this blog entry |

Automatic publishing is controled by the =publish= REST handler called regularly by a cron job such as:

<verbatim>
0 0 * * * cd <foswiki-dir>/bin && ./rest/BlogPlugin/publish
</verbatim>

---++ Installation Instructions
%$INSTALL_INSTRUCTIONS%

---++ Dependencies
%$DEPENDENCIES%

---++ Change History
%TABLE{columnwidths="7em" tablewidth="100%"}%
|  02 May 2019: | major rewrite based on new !WikiWorkbench and !ClassificationPlugin |
|  23 Jan 2017: | improved compatibility with <nop>PatternSkin; \
                  using date2 instead of date formfield now; \
                  improved <nop>OpenGraph meta data in blog postings; \
                  disabled <nop>HyphenateContrib by default now due to typography issues; \
                  fixed calculation of comments; \
                  fixed rendering of breadcrumbs; \
                  fixed solr-based blog search; \
                  display type hierarchy on <nop>CompleteDocumentation now; \
                  improvements to <nop>FrontPageViewTemplate, <nop>RenderArchives, <nop>RenderBlogEntries, <nop>RenderBlogEntryPagination, <nop>RenderBlogEntryTitle, <nop>RenderRecentBlogEntries, <nop>RenderSimilarBlogEntries; \
                  improvements to rss and atom feeds, i.e. make them cacheable by default; \
                  new <nop>WordPress importer; \
                  index a =publishdate= property for dbcache entries; \
                  added new default <nop>WebLexicon feature part of latest <nop>WikiWorkbench and <nop>MultiLingualPlugin; \
                  added <nop>SeoTopic to blog template to be able to create seo pages that aren't necessarily a blog posting; \
                  added translation files for almost all supported languages, still low coverage |
|  27 Nov 2014: | added publish/unpublish feature |
|  15 Apr 2014: | improved topic info layout |
|  04 Apr 2014: | flag rest handlers that don't require authentication |
|  18 Mar 2014: | improve css of headings |
|  07 Nov 2013: | rewrite migrating most features to other Foswiki plugins |
|  24 Jan 2006: | initial version |

%META:FORM{name="PackageForm"}%
%META:FIELD{name="Author" title="Author" value="Foswiki:Main.MichaelDaum"}%
%META:FIELD{name="Version" title="Version" value="%25$VERSION%25"}%
%META:FIELD{name="Release" title="Release" value="%25$RELEASE%25"}%
%META:FIELD{name="Description" title="Description" value="A blogging system for Foswiki"}%
%META:FIELD{name="Repository" title="Repository" value="https://github.com/foswiki/%25TOPIC%25"}%
%META:FIELD{name="Copyright" title="Copyright" value="2006-2019, http://michaeldaumconsulting.com"}%
%META:FIELD{name="License" title="License" value="GPL ([[http://www.gnu.org/copyleft/gpl.html][GNU General Public License]])"}%
%META:FIELD{name="Home" title="Home" value="Foswiki:Extensions/%25TOPIC%25"}%
%META:FIELD{name="Support" title="Support" value="Foswiki:Support/%25TOPIC%25"}%
%META:FILEATTACHMENT{name="BlogPluginSnap6.png" attachment="BlogPluginSnap6.png" attr="" comment="Frontpage sidebar" date="1556792547" size="16542" user="ProjectContributor" version="1"}%
%META:FILEATTACHMENT{name="BlogPluginSnap5.png" attachment="BlogPluginSnap5.png" attr="" comment="BlogEntry Sidebar" date="1556792547" size="46694" user="ProjectContributor" version="1"}%
%META:FILEATTACHMENT{name="BlogPluginSnap4.png" attachment="BlogPluginSnap4.png" attr="" comment="Tagging" date="1556792547" size="30666" user="ProjectContributor" version="1"}%
%META:FILEATTACHMENT{name="BlogPluginSnap3.png" attachment="BlogPluginSnap3.png" attr="" comment="Editor" date="1556792547" size="134027" user="ProjectContributor" version="1"}%
%META:FILEATTACHMENT{name="BlogPluginSnap2.png" attachment="BlogPluginSnap2.png" attr="" comment="BlogEntry view" date="1556792547" size="374274" user="ProjectContributor" version="1"}%
%META:FILEATTACHMENT{name="BlogPluginSnap1.png" attachment="BlogPluginSnap1.png" attr="t" comment="Frontpage" date="1556792547" size="345020" user="ProjectContributor" version="1"}%
